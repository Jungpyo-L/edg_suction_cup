<launch>
        <!-- This will be replaced by the  -->
        <arg name="robot_ip" default="10.0.0.1" />
        <!-- This starts the driver that allow the computer to communicate with the robot. -->
	<include file="$(find ur_modern_driver)/launch/ur10_ros_control.launch">
		<arg name="robot_ip" value="$(arg robot_ip)"/>		
	</include>

	<!-- <include file="$(find ur_modern_driver)/launch/ur10_bringup.launch">
		<arg name="robot_ip" value="$(arg robot_ip)"/>
		<arg name="use_lowbandwidth_trajectory_follower" value="false"/>
	</include> -->

	
	<!-- =================== Cartesian Setting ================================  -->	
	<arg name="launch-prefix" value=""/>
	<arg name="limited" default="false"/> 
	<!-- Load hardware configuration -->
	<!-- <rosparam file="$(find cartesian_controller_examples)/config/example_hw_config_ur.yaml" command="load"></rosparam> -->
	<!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
	<!-- <include file="$(find ur10_moveit_config)/launch/planning_context.launch"> -->
			<!-- <arg name="load_robot_description" value="true"/> -->
			<!-- <arg name="limited" value="$(arg limited)"/> -->
	<!-- </include> -->

	<!-- Load hardware interface -->
	<!-- <node name="sim_hardware_interface" pkg="ros_control_boilerplate" type="sim_hw_main" output="screen" launch-prefix="$(arg launch-prefix)"/> -->
          

	<!-- Load controller configuration -->
        <rosparam file="$(find cartesian_controller_examples)/config/example_controllers_ur.yaml" command="load"></rosparam>

	<!-- Joint state publisher -->
	<node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" args="joint_state_controller" respawn="false" output="screen"/>

	<!-- Spawn controllers -->
	<node name="controller_spawner" pkg="controller_manager" type="spawner"
			args="--stopped
			my_cartesian_motion_controller
			my_cartesian_force_controller
			my_cartesian_compliance_controller
			my_motion_control_handle
			my_joint_to_cartesian_controller
			joint_trajectory_controller
			"
	/>


	<!-- This start MoveIt which allows us to plan trajectories while avoiding collisions. -->
	<!-- <include file="$(find ur10_moveit_config)/launch/ur10_moveit_planning_execution.launch">
		<arg name="limited" value="true"/>
	</include> -->

	<!-- This launch a visualization tool which allows us to see the scene in which the
				robot is working in. -->
	<!-- <include file="$(find ur10_moveit_config)/launch/moveit_rviz.launch"> -->
		<!-- <arg name="config" value="true"/> -->
	<!-- </include> -->

	<!-- Visualization -->
	<arg name="my_rviz" value="-d $(find cartesian_controller_examples)/etc/examples.rviz" />
	<node name="rviz" pkg="rviz" type="rviz" respawn="false" args="$(arg my_rviz)" output="screen" >
	</node>

</launch>


